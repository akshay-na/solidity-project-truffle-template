#! /bin/zsh

URL=$1

fork=false
unlock=false
network=
networkURL=
accounts=

command="npx ganache --defaultBalanceEther 90000000000000 -v -m \$MNEMONIC"

function load_dotenv(){
  set -a
  source <(cat .env | sed -e '/^#/d;/^\s*$/d' -e "s/'/'\\\''/g" -e "s/=\(.*\)/='\1'/g")
  set +a
}

if [ -z $MNEMONIC ]
then
load_dotenv
fi

Help()
{
   # Display Help
   echo "Custom Ganache script to easily fork any chain from .env file."
   echo
   echo "Syntax: ./ganache [option] [args]"
   echo
   echo "[Options]"
   echo
   echo "-n     Networks: eth, bsc, polygon, smartbch"
   echo         "For testnets add _testnet. Example: bsc_testnet"
   echo "-h     Print this Help."
   echo "-u     unlocks the given accounts."
   echo
}


while getopts "hn:u:" option; do
   case $option in
      h) # display Help
         Help
         exit;;
      n) # Enter networkname
         fork=true
         network=$OPTARG;;
      u) # unlock accounts
         unlock=true
         accounts=$OPTARG;;
      \?) # Invalid option
         echo "Error: Invalid option. Please refer Help page"
         Help
         exit;;
   esac
done


case $network in
      "eth")
         networkURL=$ETH_MAINNET_GETBLOCK$GETBLOCK_API;;
      "eth_ropsten")
         networkURL=$ETH_TESTNET_ROPSTEN_GETBLOCK$GETBLOCK_API;;
      "eth_kovan")
         networkURL=$ETH_TESTNET_KOVAN_GETBLOCK$GETBLOCK_API;;
      "eth_rinkeby")
         networkURL=$ETH_TESTNET_RINKEBY_GETBLOCK$GETBLOCK_API;;
      "eth_goerli")
         networkURL=$ETH_TESTNET_GOERLI_GETBLOCK$GETBLOCK_API;;
      "bsc")
         networkURL=$BSC_MAINNET_GETBLOCK$GETBLOCK_API;;
      "bsc_testnet")
         networkURL=$BSC_TESTNET_GETBLOCK$GETBLOCK_API;;
      "polygon")
         networkURL=$POLYGON_MAINNET_GETBLOCK$GETBLOCK_API;;
      "polygon_testnet")
         networkURL=$POLYGON_TESTNET_GETBLOCK$GETBLOCK_API;;
      "op")
         networkURL=$POLYGON_MAINNET_GETBLOCK$GETBLOCK_API;;
      "op_testnet")
         networkURL=$OPTIMISM_MAINNET_GETBLOCK$GETBLOCK_API;;
      "ftm")
      networkURL=$FHANTOM_MAINNET_GETBLOCK$GETBLOCK_API;;
esac

if [ $fork ] && [ $unlock ]
then
eval $command -f $networkURL --unlock $accounts
elif [ $fork ] && [ $unlock = false ]
then
eval $command -f $networkURL
elif [ $fork = false ] && [ $unlock ]
then
eval $command --unlock $accounts
else
eval $command
fi
